name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.20, 1.21, 1.22]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Install dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Build binaries
      run: |
        mkdir -p build
        # Linux
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o build/Go-OPML-linux cmd/go-opml/main.go
        # Windows
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o build/Go-OPML.exe cmd/go-opml/main.go
        # macOS Intel
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o build/Go-OPML-mac-intel cmd/go-opml/main.go
        # macOS Apple Silicon
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o build/Go-OPML-mac-arm64 cmd/go-opml/main.go
    
    - name: Generate checksums
      run: |
        cd build
        sha256sum * > checksums.txt
    
    - name: Upload binaries to release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          build/Go-OPML-linux
          build/Go-OPML.exe
          build/Go-OPML-mac-intel
          build/Go-OPML-mac-arm64
          build/checksums.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
